# 2) კომენტარებით ახსენით თუ რა არის custom ფუნქციები, რისთვის გამოვიყენებთ და რა დანიშნულება გააჩნიათ, ასევე ახსენით მისი შექმნის გზები ეტაპობრივად და ახსენეთ თუ რაა პარამეტრები და არგუმენტები.

# Custom ფუნქცია არის პროგრამისტის მიერ შექმნილი საკუთარი ფუნქცია.
# ეს ნიშნავს, რომ თავად ვწერთ წესებს და მოქმედებებს, რაც უნდა გააკეთოს ამ ფუნქციამ.
# ასეთი ფუნქცია გვეხმარება კოდის გამარტივებაში და განმეორებითი მოქმედებების თავიდან აცილებაში.

# 1. კოდის ხელახალი გამოყენება (reuse)
# 2. კოდის სისუფთავე და გასაგება
# 3. რთული ლოგიკის დაყოფა პატარა ნაწილებად
# 4. შეცდომების გამარტივებული მართვა

# 1. ეტაპი - ვიყენებთ საკვანძო სიტყვას `def`
# 2. ეტაპი - ვაწერთ ფუნქციის სახელს (მაგ. greet)
# 3. ეტაპი - ფრჩხილებში ჩავწერთ პარამეტრებს (თუ არის საჭირო)
# 4. ეტაპი - კოდის ბლოკში ვწერთ მოქმედებას


# 3) შექმენით ფუნქცია, რომელსაც გადაეცემა ორი რიცხვი. თქვენი დავალებაა დააბრუნოთ ამ ორი რიცხვის ჯამი.

def add_numbers(num1, num2):

    return num1 + num2

result = add_numbers(5, 7)
print("ჯამი არის:", result)
# result არის ცვლადი
# ცვლადი ნიშნავს სახელს, რომელსაც ვაწერთ მონაცემს, რომ შემდეგ მარტივად გამოვიყენოთ.


# 4) შექმენით ფუნქცია, რომელსაც გადაეცემა 1 რიცხვი. თქვენი დავალებაა შეამოწმოთ ამ რიცხვის ლუწობა. თუ იგი ლუწია, დაბეჭდეთ "რიცხვი ლუწია" სხვა შემთხვევაში "რიცხვი კენტია"
def even_or_odd(number):
    if number %2 == 0:
        print("nummber is even")
    else:    
        print("number is odd")

even_or_odd(8)
even_or_odd(5)        
# 5) შექმენით ფუნქცია, რომელსაც გადაეცემა 1 რიცხვი. თქვენი დავალებაა დააბრუნოთ ამ რიცხვის კვადრატული მნიშნელობა.

def square (number):
    return(number * number)
print(square(3))   
print(square(10))  

# 6) შექმენით ფუნქცია, რომელიც გადაცემულ ტექსტს აბრუნებს დიდი ასოებით.
def to_upper(text):
    return text.upper()

print(to_upper("hello world"))
print(to_upper("anano"))

# 7) შექმენით ფუნქცია, რომელსაც პარამეტრებად გადაეცემა სახელი და გვარი, თქვენი დავალებაა გამოიტანოთ მნიშვნელობები ერთი წინადადების სახით.
def full_name(name, surname):
    print("მომხმარებელია:", name, surname)
full_name("anano","tsagareishvili")